<?php
/**
 * [iirs_latest_update_theme description]
 * @return [type] [description]
 */
function cssteap_updates_theme() {
  return array(
    'cssteap' => array(
      'template' => 'admin/cssteap',
      'variables' => array('links' => NULL),
    ),
    'announcement' => array(
      'template' => 'admin/announcement',
      'variables' => array('form' => NULL, 'result' => NULL, 'editData' => NULL),
    ),
    'courses' => array(
      'template' => 'admin/courses',
      'variables' => array('form' => NULL, 'result' => NULL),
    ),
    'news' => array(
      'template' => 'news',
      'variables' => array('result' => NULL),
    ),
  );
}
/**
 * Implements hook_menu().
 */
function cssteap_updates_menu() {
  $items = array();

  $items['admin/config/content/cssteap_updates'] = array(
    'title' => 'CSSTEAP News Updates',
    'description' => 'Get all theme from knowledge repository',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cssteap_updates_config_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM, //Will appear in Navigation menu.
  );
  $items['admin/cssteap_updates'] = array(
    'title' => 'CSSTEAP',
    'description' => 'All Updates Related with CSSTEAP',
    'page callback' => 'cssteap_updates_page',
    'page arguments' => array('cssteap_updates'),
    'access arguments' => array('access administration pages'),
    'file' => 'cssteap_updates.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/cssteap_updates/announcement'] = array(
    'title' => 'CSSTEAP Announcement',
    'description' => 'Update announcement',
    'page callback' => 'cssteap_updates_page_announcement',
    'page arguments' => array('cssteap_updates'),
    'access arguments' => array('access administration pages'),
    'file' => 'cssteap_updates.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/cssteap_updates/courses'] = array(
    'title' => 'CSSTEAP Courses',
    'description' => 'Update announcement',
    'page callback' => 'cssteap_updates_page_courses',
    'page arguments' => array('cssteap_updates'),
    'access arguments' => array('access administration pages'),
    'file' => 'cssteap_updates.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}
/**
 * Page callback: Current posts settings
 *
 * @see iirs_latest_update_menu()
 */
function cssteap_updates_config_form($form, &$form_state) {

  $form['max_news_on_top'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of news'),
    '#default_value' => variable_get('max_news_on_top', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t('The maximum number of links to display in the block.'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function announcement_form($form, &$form_state) {

  $announcement = (object) array(
      'id' => '',
      'title' => '',
      'url' => '',
      'thumbnail' => '',
  ); 

  if(isset($_GET['id']) && !empty($_GET['id'])){
    $announcement = getAnnouncementById($_GET['id']);
  }

  $form['id'] = array(
    '#value' => $announcement->id,
    '#type' => 'hidden',
  );

  $form['news_title'] = array(
    '#type' => 'textarea',
    '#title' => t('News Title'),
    '#default_value' => variable_get('news_title', $announcement->title),
    // '#size' => 2,
    // '#maxlength' => 2,
    '#description' => t('Enter News Title here'),
    '#required' => TRUE,
  );
  $form['news_link'] = array(
    '#type' => 'textfield',
    '#title' => t('News Link'),
    '#default_value' => variable_get('news_link', $announcement->url),
    //'#size' => 2,
    //'#maxlength' => 2,
    '#description' => t('Enter News Link here'),
    '#required' => FALSE,
  );
  $form['news_image'] = array(
    '#type' => 'file',
    '#title' => t('News Image'),
    '#description' => t('Current file: '.drupal_basename($announcement->thumbnail) .' Update file, allowed extensions: jpg, jpeg, png, gif'),
    '#upload_location' => 'public://announcement/',
    '#required' => FALSE,
  );
  $form['news_image_edit'] = array(
    '#value' => $announcement->thumbnail,
    '#type' => 'hidden',
  );
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
  //return node_content_form($node, $form_state);
}

function announcement_form_submit($form, &$form_state)
{

  $params = [
      'news_title' => $form_state['values']['news_title'], 
      'news_link' => $form_state['values']['news_link'], 
      'news_image' => ''
  ];
  if (isset($form_state['values']['news_image'])) {
    //$file = file_load($form_state['values']['news_image']);

    // Upload file to upload_directory in the public files dir.
    $file = file_save_upload('news_image', array(
      'file_validate_is_image' => array(),
      'file_validate_image_resolution' => array('100x73', '50x50'),
    ), 'public://announcement/', FILE_EXISTS_REPLACE);
    //var_dump($file);die;
    // Check if image upload was success.
    if ($file) {
      drupal_set_message(t('Image successfully uploaded.'), 'status');
      $file->status = FILE_STATUS_PERMANENT;
      $file_saved = file_save($file);
      $params['news_image'] = $file->filename;
    }else if (isset($_POST['id']) && !empty($_POST['id'])) {
      $params['news_image'] = $form_state['values']['news_image_edit'];
    }
    else {
      form_set_error('image', t('Image was not uploaded.'));
    }
  }
  if (isset($_POST['id']) && !empty($_POST['id'])) {
    $params['id'] = $form_state['values']['id'];
    updateAnnouncement($params);
  } else if (!empty($_POST['news_title'])){
    createAnnouncement($params);
  } else {
    form_set_error('error_message', t('Please fill all the required field'));
  }

}

function cources_form($form, &$form_state) {
 $course = (object) array(
      'id' => '',
      'title' => '',
      'url' => '',
      'thumbnail' => '',
      'status' => '',
      'expire_on' => date("Y-m-d H:i:s"),
  ); 

  if(isset($_GET['id']) && !empty($_GET['id'])){
    $course = getCourseById($_GET['id']);
  }
  $dateArr = array('year' => date('Y', strtotime($course->expire_on)), 'month' => date('n', strtotime($course->expire_on)), 'day' => date('d', strtotime($course->expire_on))); // just copy/pasted it from the API for now
  //var_dump($dateArr);die;
  $form['id'] = array(
    '#value' => $course->id,
    '#type' => 'hidden',
  ); 

 $form['news_title'] = array(
    '#type' => 'textarea',
    '#title' => t('News Title'),
    '#default_value' => variable_get('news_title', $course->title),
    '#description' => t('Enter News Title here'),
    '#required' => TRUE,
  );

  $form['news_link'] = array(
    '#type' => 'textfield',
    '#title' => t('News Link'),
    '#default_value' => variable_get('news_link', $course->url),
    //'#size' => 2,
    //'#maxlength' => 2,
    '#description' => t('Enter News Link here'),
    '#required' => FALSE,
  );
  $form['course_type'] = array(
    '#type' => 'select',
    '#title' => t('Course Type'),
    '#description' => t('Enter News Image here'),
    '#options' => array(t('--- SELECT ---'),t('Ongoing'), t('Upcoming')),
    '#required' => FALSE,
  );
  $form['expire_on'] = array(
    '#type' => 'date',
    '#title' => t('Expire On'),
    '#description' => t('Enter News Image here'),
    '#default_value' => variable_get('expire_on', $dateArr),
    '#required' => TRUE,
  );
  $form['news_image'] = array(
    '#type' => 'file',
    '#title' => t('News Image'),
    '#description' => t('Current file: '.drupal_basename($course->thumbnail) .' Update file, allowed extensions: jpg, jpeg, png, gif'),
    '#required' => FALSE,
  );
  $form['news_image_edit'] = array(
    '#value' => $course->thumbnail,
    '#type' => 'hidden',
  );
  $form['submit_course'] = array(
    '#type' => 'submit',
    '#title' => t('Submit Course'),
    '#value' => t('Save'),
  );
  
  return $form;
}
function cources_form_validate($form, &$form_state) {

}

function cources_form_submit($form, &$form_state) {
  $date = implode('/', $form_state['input']['expire_on']);
  $datetime = new DateTime($date);
  $expire_on = date("Y-m-d H:i:s", date_timestamp_get($datetime));
  $params = [
      'news_title' => $form_state['values']['news_title'], 
      'news_link' => $form_state['values']['news_link'],
      'course_type' => $form_state['values']['course_type'], 
      'expire_on' => $expire_on,
      'news_image' => ''
  ];
  if (isset($form_state['values']['news_image'])) {
    // Upload file to upload_directory in the public files dir.
    $file = file_save_upload('news_image', array(
      'file_validate_is_image' => array(),
      'file_validate_image_resolution' => array('100x73', '50x50'),
    ), 'public://courses/', FILE_EXISTS_REPLACE);
     
    // Check if image upload was success.
    if ($file) {
      drupal_set_message(t('Image successfully uploaded.'), 'status');
      $file->status = FILE_STATUS_PERMANENT;
      $file_saved = file_save($file);
      $params['news_image'] = $file->filename;
    }else if (isset($_POST['id']) && !empty($_POST['id'])) {
      $params['news_image'] = $form_state['values']['news_image_edit'];
    }
    else {
      form_set_error('image', t('Image was not uploaded.'));
    }
  }
  if (isset($_POST['id']) && !empty($_POST['id'])) {
    $params['id'] = $form_state['values']['id'];
    updateCourses($params);
  } else if (!empty($_POST['news_title'])){
    createCourses($params);
  } else {
    form_set_error('error_message', t('Please fill all the required field'));
  }
}

/**
 * Implements hook_block_info().
 */
function cssteap_updates_block_info() {
  $blocks['cssteap_news'] = array(
    // The name that will appear in the block list.
    'info' => t('CSSTEAP News'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  $blocks['announcement'] = array(
    // The name that will appear in the block list.
    'info' => t('CSSTEAP Announcement'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  $blocks['courses'] = array(
    // The name that will appear in the block list.
    'info' => t('CSSTEAP Courses'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 * 
 * Prepares the contents of the block.
 */
function cssteap_updates_block_view($delta = '') {
  // $result = cssteap_updates_contents('block');
  
  switch ($delta) {
    case 'cssteap_news':
      //$block['subject'] = t('CSSTEAP News');
      if (user_access('access content')) {
        // Use our custom function to retrieve data.
        $announcements = getAnnouncement();
        $courses = getCourses();
        $result = ['announcements' => $announcements,  'courses' => $courses];
        //var_dump($result['announcements']);die;
       // No content in the last week.
        if (empty($announcements)) {
          $path = drupal_get_path('module', 'iirs_latest_update');
      //var_dump($path);die;
          $block['content'] = t('No posts available.');  
        } 
        else {
          // Pass data through theme function.
          $block['content'] = theme('news', array(
            'result' => $result));
        }
      }
      
    return $block;
  }
  
}
function cssteap_updates_contextual_links_view_alter(&$element, &$items) {
  // This hook is called for EVERY set of contextual links
  // on a page.  We first want to check the $element to make
  // sure we are adding a link to the correct list of contextual
  // links. In this case we only want to add a link to blocks
  // created by the "search" module. We just add links using the
  // same array structure as is used by theme_links.
  if (isset($element['#element']['#block']) && $element['#element']['#block']->delta == "cssteap_news") {
    $element['#links']['social-networks'] = array(
      'title' => 'Edit CSSTEAP News',
      'href' => url('/admin/cssteap_updates', array('absolute' => TRUE)),
    );
  }
}
function getAnnouncement(){
  
  $query = db_select('announcement', 'a')
    ->fields('a');

  $result = $query->execute()->fetchAll();
  return $result;
}

function getCourses(){
  $query = db_select('news_courses', 'a')
    ->fields('a')
    ->isNotNull('expire_on')
    ->condition('expire_on', date("Y-m-d"), '>=') ;
    
  //print strtr((string) $query, $query->arguments());die;

  $result = $query->execute()->fetchAll();
  return $result;
}

function getCoursesAdmin(){
  $query = db_select('news_courses', 'a')
    ->fields('a');
  $result = $query->execute()->fetchAll();
  return $result;
}